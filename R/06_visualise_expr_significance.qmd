---
title: "06_expression_significance"
format: html
editor: visual
---

## Load Libraries

```{r}
library(tidyverse)
library(broom)
library(patchwork)
```

## Load data

```{r}
expression_data <- read_tsv(gzfile('../data/augmented_meta_gene_table.tsv.gz'))
significans_data <- read_tsv(gzfile('../data/gene_model_estimates.tsv.gz'))
```

## Define meta and gene columns

```{r}
# lists of meta data columns and gene columns

meta_cols <- c('Sample',
               'Gender',
               'Race',
               'Smoker',
               'Age',
               'BMI')

gene_cols <- expression_data |> 
  dplyr::select(-all_of(meta_cols)) |> 
  colnames()  
```

## Data preparation

We reconstructed the **`Tissue_type`** column and calculated two new columns, **`mean_log2_expr`** and **`mean_log2_expr_change`**, for each gene. These columns represent the average values derived from all observations for the respective tissue type. This approach enabled us to compare gene expression levels between lesional and perilesional tissues more effectively. We then added the gene information by separate it from our original data and merging it back using **`full_join`** .

```{r}
expr_diff_ranked_data <- expression_data |> 
  # Recreate tissue_type variable
  pivot_longer(c(log2_Lesion, log2_Perilesion), 
              names_to = 'Tissue_type',
              values_to = 'log2_expression') |> 
  mutate(Tissue_type = 
           if_else(Tissue_type == 'log2_Lesion', 
                               'Lesion', 
                               'Perilesion')) |> 
  
  # Arrange the data by decreasing log2_expr_change
  dplyr::select(-c(Lesion,
                   Perilesion,
                   expr_diff)) |>
  group_by(gene) |> 
  arrange(desc(log2_expr_change)) |> 
  ungroup() |> 
  group_by(Tissue_type, gene) |> 
  summarise(mean_log2_expr_change = mean(log2_expr_change),
            mean_log2_expr = mean(log2_expression)) |> 
  ungroup() |>
  # Sort by mean_log2_expr_change in descending order and get top 20
  arrange(desc(mean_log2_expr_change)) |> 
  as_data_frame() 

```

```{r}
# Collect information about the genes
gene_info <- expression_data |> 
  dplyr::select(gene,
                SYMBOL,
                GENENAME,
                CHR) |> 
   distinct(gene, .keep_all = TRUE) |> 
   as_data_frame()

gene_info
```

```{r}
#Use this as join is a tidyverse function
merged_expr_gene_data <- expr_diff_ranked_data |> 
  full_join(gene_info,
            join_by(gene))
```

## Plot estimate and confidence interval found from lm

```{r fig.height = 8}

#Using join
merged_sig_data <- significans_data |> 
  inner_join(gene_info,
            join_by(gene))


merged_sig_data |>
  filter(is_significant == 'yes') |>
  arrange(desc(estimate)) |>
  dplyr::slice(c(1:20, (n()-20):n())) |>
  ggplot(aes(x = estimate,
      y = fct_reorder(SYMBOL,estimate))) +
  geom_point() +
  geom_errorbarh(aes(xmin=conf.low, xmax=conf.high)) +
  geom_vline(xintercept = 0) +
  xlab('Estimates (95%CIs)') +
  ylab('') +
  ggtitle('Genes Associated with Lesions') +
  labs(caption = '..') +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5,
                                  face = 'bold'),
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 10), 
    axis.text.y = element_text(size = 10), 
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)  
  )
  
ggsave("../pictures/associations_genes.png", bg = "white")
```

## Log2 expression distribution

```{r fig.width = 4, fig.height = 6}
meanlog2_dist <- 
  merged_expr_gene_data |> 
  ggplot(aes(y = mean_log2_expr_change, x = 0)) +
  geom_violin(fill = 'red', alpha = 0.5, adjust = 0.5, width = 0.5) +
  theme_minimal() +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_blank(),
    axis.ticks.x = element_blank(),
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    plot.title = element_text(face = "bold",
                              size = 10),
    axis.title.y = element_text(size = 11),
  ) +
  labs(
    title = "Distribution of Mean Log2 Expression Change",
    y = "Mean Log2 Expression Change"
  )

meanlog2_dist
# ggsave("../pictures/meanLog2_dist.png", meanlog2_dist)
```

## Heatmap overview of gene expression change

To effectively visualize the gene expression changes of the most significantly altered genes, we focused on creating a detailed heatmap. Initially, we selected data corresponding to the top 25 most upregulated and downregulated genes. Our heatmap was divided into three sections: 1) The mean log2 expression of Lesional and Perilesional tissue, 2) The mean log2 expression change, and 3) The average mean expression change. We then combined these three heatmaps into one cohesive visualization using the **`patchwork`** package. The genes were ordered based on the log2 expression change.

```{r}
arranged_merged_expr_gene_data <- merged_expr_gene_data |>
  arrange(mean_log2_expr_change) |> 
  dplyr::slice(c(1:50, (n()-49):n()))


data_with_avg_log2 <- arranged_merged_expr_gene_data |> 
  pivot_wider(names_from = Tissue_type,
              values_from = mean_log2_expr) |> 
  mutate(avg_mean_log2_expr = (Lesion + Perilesion)/2)
```

### Heatmap 1: mean log2 expression

```{r}
midval1 <- arranged_merged_expr_gene_data |> 
  summarise(mean = mean(mean_log2_expr)) |> 
  pull(mean)

      
p1 <- arranged_merged_expr_gene_data |>  
  ggplot(aes(x = Tissue_type, 
             y = fct_reorder(SYMBOL, mean_log2_expr_change), 
             fill = mean_log2_expr)) + 
  geom_tile() +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval1) +
  labs(fill = 'log2expr') + 
  theme_minimal() +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(), 
    axis.text.x = element_text(size = 10), 
    axis.text.y = element_blank(),
    legend.title = element_text(size = 12), 
    ) 
p1
```

### Heatmap 2: mean log2 expression change

```{r}
midval2 <- arranged_merged_expr_gene_data|> 
  summarize(median = 
            median(mean_log2_expr_change)) |> 
  pull(median)


p2 <- arranged_merged_expr_gene_data |>
  ggplot(aes(x = "log2FC", 
             y = fct_reorder(SYMBOL, mean_log2_expr_change), 
         fill = mean_log2_expr_change)) +
  geom_tile() +  
  geom_text(aes(label = round(mean_log2_expr_change,3)), 
            color = "black", 
            size = 3) +  
  # Adds the text labels on top of the tiles
  scale_fill_gradient2(low = 'blue',
                       high = 'red',
                       mid = 'white',
                       midpoint = midval2) +
  labs(fill = 'log2FC') +
  theme_minimal() +
  theme(axis.ticks.x = element_blank(), 
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        panel.grid = element_blank())  
p2
```

### Heatmap 3: average mean log2 expression

```{r}
midpoint3 <- data_with_avg_log2 |> 
  summarize(median = median(avg_mean_log2_expr)) |> 
  pull(median)


p3 <- data_with_avg_log2 |> 
  ggplot(aes(x = 'log2Avgexpr', 
             y = fct_reorder(SYMBOL, mean_log2_expr_change), 
             fill = avg_mean_log2_expr)) + 
  geom_tile() +  
  geom_text(aes(label = round(avg_mean_log2_expr, 3)), 
            color = "black", size = 3) +  
  # Adds the text labels on top of the tiles
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white', 
                       midpoint = midpoint3) +
  labs(fill = 'avglog2expr') +
  theme_minimal() +
  scale_y_discrete(position = "right") +
  theme(axis.ticks.x = element_blank(),  
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        panel.grid = element_blank()
        ) 
p3
```

### Combined Heatmap plot

```{r fig.width= 6, fig.height=10}
p1 <- p1 + theme(legend.position = "none")

p2 <- p2 + theme(legend.position = "none")

p3 <- p3 + theme(legend.position = "none")


combined_plot <- (p1 | p2 | p3) + 
    plot_layout(ncol = 3, widths = c(3, 1, 1), guides = 'collect') +
    plot_annotation(
    title = "Gene Expression Heatmap of\nTop 25 Upregulated and Downregulated Genes") &
    # The & is used as we want to apply theme to every plot
    theme(legend.position = "right",
    plot.title = element_text(hjust = 0.5,
                              vjust = 2,
                              face = 'bold'))

combined_plot

# ggsave("../pictures/heatmap_overview.png", combined_plot)
```

## Heatmap of top 25 upregulated and downregulated genes

For a closer examination, we focused on the top 25 genes that were most significantly upregulated and downregulated, exploring these through a heatmap.

```{r fig.width=5, fig.height=5}
most_upreg <- arranged_merged_expr_gene_data |> 
  slice_head(n = 50)

midval <- arranged_merged_expr_gene_data |> 
  summarize(median = median(mean_log2_expr)) |> 
  pull(median)

heatmap_upreg <- 
  most_upreg |>  
  ggplot(aes(x = Tissue_type, 
             y = fct_reorder(SYMBOL, -mean_log2_expr_change), 
             fill = mean_log2_expr)) + 
  geom_tile() +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval) +
  labs(
    title = 'Top 25 most downregulated genes',
    fill = 'log2 expression') + 
  theme_minimal() +
  theme(
    plot.title = element_text(size = 15,
                              hjust = 0.5,
                              vjust = 2,
                              face = 'bold'),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(), 
    axis.title.x = element_blank(),
    axis.title.y = element_blank(), 
    axis.text.x = element_text(size = 10), 
    axis.text.y = element_text(size = 10), 
    legend.title = element_text(size = 12), 
    legend.text = element_text(size = 10)  
  ) +
  # Increase colorbar size
  guides(fill = guide_colourbar(barwidth = 1, barheight = 7)) 

heatmap_upreg
ggsave("../pictures/heatmap_upreg.png", heatmap_upreg)
```

```{r fig.width=5, fig.height=5}
most_downreg <- arranged_merged_expr_gene_data |> 
  slice_tail(n = 40) 
                      
heatmap_downreg <- 
  most_downreg |>  
  ggplot(aes(x = Tissue_type, 
             y = fct_reorder(SYMBOL, mean_log2_expr_change), 
             fill = mean_log2_expr)) + 
  geom_tile() +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval) +
  labs(
    title = 'Top 20 most upregulated genes',
    fill = 'log2 expression') + 
  theme_minimal() +
  theme(
    plot.title = element_text(size = 15,
                              hjust = 0.5,
                              vjust = 2,
                              face = 'bold'),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(),
    axis.text.x = element_text(size = 10), 
    axis.text.y = element_text(size = 10), 
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10)  
  ) +
  # Increase colorbar size
  guides(fill = guide_colourbar(barwidth = 1, barheight = 7)) 

ggsave("../pictures/heatmap_downreg.png", heatmap_downreg)
```

## Boxplot visualisation of expression change

The heatmap, while informative, wasn't sufficient for a detailed examination. We decided to create boxplots for the 20 most upregulated and downregulated genes. In these boxplots, the top and bottom points represent the log2 expression for each tissue type. The height of each box indicates the log2 fold change, providing a visual representation of expression differences. Additionally, we used color coding to illustrate the mean log2 expression change, adding another layer of insight into the gene expression dynamics.

```{r fig.width=10, fig.height=7}
data_tot_with_avg_log2 <- merged_expr_gene_data |> 
  arrange(mean_log2_expr_change) |>
  pivot_wider(names_from = Tissue_type,
              values_from = mean_log2_expr) |> 
  mutate(avg_mean_log2_expr = (Lesion + Perilesion)/2,
         regulated = if_else((Lesion-Perilesion < 0), 
                             "Downregulated", 
                             "Upregulated")) |>
  dplyr::slice(c(1:20, (n()-19):n())) |>
  left_join(gene_info, by=join_by(gene))

midval <- data_tot_with_avg_log2 |>
  summarize(median = median(mean_log2_expr_change)) |> 
  pull(median)

p4 <- data_tot_with_avg_log2 |> 
  filter(regulated=="Upregulated") |>
  ggplot(aes(ymin=Lesion, 
             lower=Lesion,
             middle=avg_mean_log2_expr,
             ymax=Perilesion, 
             upper=Perilesion,
             fill=mean_log2_expr_change,
             x=fct_reorder(SYMBOL.y, avg_mean_log2_expr))) +
  ggtitle("Upregulated genes") +
  theme(plot.title = element_text(hjust = 0.5)) +
  geom_boxplot(stat="identity")  +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval) +
  ylim(-1, 20)

p5 <- data_tot_with_avg_log2 |> 
  filter(regulated=="Downregulated") |>
  ggplot(aes(ymin=Lesion, 
           lower=Lesion,
           middle=avg_mean_log2_expr,
           ymax=Perilesion, 
           upper=Perilesion,
           fill=mean_log2_expr_change,
           x=fct_reorder(SYMBOL.y, avg_mean_log2_expr))) +
  ggtitle("Downregulated genes") +
  theme(plot.title = element_text(hjust = 0.5)) +
  geom_boxplot(stat="identity")  +
  scale_fill_gradient2(low = 'blue', 
                     high = 'red', 
                     mid = 'white',
                     midpoint = midval) +
  ylim(-1, 20)

combined_plot_2 <- (p4 | p5) + 
                 plot_layout(ncol = 2, 
                             widths = c(1, 1), 
                             guides = 'collect') & 
                 theme(legend.position = "bottom") +
                 theme(axis.text.x = element_text(angle = 45,
                                                  hjust = 1,
                                                  vjust = 1),
                       axis.title.x = element_blank()) 

combined_plot_2
ggsave("../pictures/boxplot_change.png")
```
