---
title: "05_expression_significance"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(broom)
```

```{r}
# load data
data <- read_tsv('../data/augmented_meta_gene_table.tsv')
significans_data <- read_tsv('../data/gene_model_estimates.tsv')
```

```{r}
# lists of meta data columns and gene columns

meta_cols <- c('Sample',
               'Gender',
               'Race',
               'Smoker',
               'Age',
               'BMI')

gene_cols <- data |> 
  select(-one_of(meta_cols)) |> 
  colnames()  
```

```{r}
ggplot(data = significans_data |> 
         filter(is_significant == 'yes', )) +
  aes(x = estimate,
      y = gene,
      order = gene) +
  geom_point()+
  geom_errorbarh(aes(xmin=conf.low, xmax=conf.high)) +
  geom_vline(xintercept = 0) +
  xlab('Estimates (95%CIs)') +
  ylab('') +
  ggtitle('Genes Associated with Lesions') +
  labs(caption = '..')+
  theme_minimal()
```

```{r}

expr_diff_ranked_data <- 
  data |> 
  pivot_longer(c(log2_Lesion, log2_Perilesion), 
              names_to = 'Tissue_type',
              values_to = 'log2_expression') |> 
  mutate(Tissue_type = 
           if_else(Tissue_type == 'log2_Lesion', 
                               'Lesion', 
                               'Perilesion')) |> 
  select(all_of(meta_cols), 
         Tissue_type, 
         gene,
         log2_expression, 
         log2_expr_change) |>
  group_by(gene) |> 
  arrange(desc(log2_expr_change)) |> 
  # Not sure if i should take the mean 
  ungroup() |> 
  group_by(gene, Tissue_type) |> 
  summarise(mean_log2_expr_change = mean(log2_expr_change),
            mean_log2_expr = mean(log2_expression)) |> 
  ungroup() |> 
  # Sort by mean_log2_expr_change in descending order and get top 20
  arrange(desc(mean_log2_expr_change)) 
```

```{r fig.width=10, fig.height=5}
most_upreg <- 
  expr_diff_ranked_data |> 
  slice_head(n = 40)

midval <- 
  expr_diff_ranked_data |> 
  summarize(median = 
              median(mean_log2_expr)) |> 
  pull(median)
                      
most_upreg |>  
  ggplot(aes(x = Tissue_type, y = gene, fill = mean_log2_expr)) + 
  geom_tile() +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval) +
  labs(
    title = 'Top 20 most upregulated genes',
    fill = 'log2 expression') + 
  theme_minimal() +
  theme(
    plot.title = element_text(size = 20,
                              hjust = 0.5,
                              vjust = 2,
                              face = 'bold'),
    panel.grid.major = element_blank(), # Remove major grid lines
    panel.grid.minor = element_blank(), # Remove minor grid lines
    axis.title.x = element_blank(), # Remove x-lable
    axis.title.y = element_blank(), # Remove y-lable
    axis.text.x = element_text(size = 15), # Adjust X-axis text size
    axis.text.y = element_text(size = 12), # Adjust Y-axis text size
    legend.title = element_text(size = 15), # Adjust color bar title size
    legend.text = element_text(size = 12)  # Adjust color bar text size
  ) +
  # Increase colorbar size
  guides(fill = guide_colourbar(barwidth = 1, barheight = 7)) 
```

```{r fig.width=10, fig.height=5}
most_downreg <- 
  expr_diff_ranked_data |> 
  slice_tail(n = 40)
                      
most_downreg |>  
  ggplot(aes(x = Tissue_type, y = gene, fill = mean_log2_expr)) + 
  geom_tile() +
  scale_fill_gradient2(low = 'blue', 
                       high = 'red', 
                       mid = 'white',
                       midpoint = midval) +
  labs(
    title = 'Top 20 most downregulated genes',
    fill = 'log2 expression') + 
  theme_minimal() +
  theme(
    plot.title = element_text(size = 20,
                              hjust = 0.5,
                              vjust = 2,
                              face = 'bold'),
    panel.grid.major = element_blank(), # Remove major grid lines
    panel.grid.minor = element_blank(), # Remove minor grid lines
    axis.title.x = element_blank(), # Remove x-lable
    axis.title.y = element_blank(), # Remove y-lable
    axis.text.x = element_text(size = 15), # Adjust X-axis text size
    axis.text.y = element_text(size = 12), # Adjust Y-axis text size
    legend.title = element_text(size = 15), # Adjust color bar title size
    legend.text = element_text(size = 12)  # Adjust color bar text size
  ) +
  # Increase colorbar size
  guides(fill = guide_colourbar(barwidth = 1, barheight = 7)) 
```
