---
title: "07_PCA"
format: html
editor: visual
---

```{r}
# output: FALSE
library(tidyverse)
library(ggrepel)
library(broom)
```

```{r}
expression_data <- read_tsv(gzfile('../data/augmented_meta_gene_table.tsv.gz'))
```

```{r}
all_cols <- expression_data %>% 
  colnames()
```

```{r}
all_cols
```

```{r}
pca_data <- expression_data %>% 
  dplyr::select(-one_of(c("log2_Lesion",
                          "log2_Perilesion",
                          "GENENAME",
                          "CHR",
                          "log2_expr_change",
                          "expr_diff",
                          "Sample",
                          "SYMBOL"))) %>% 
  mutate(Age = cut_interval(Age, length = 10)) %>% 
  mutate(BMI = case_when(BMI < 18.5 ~ 'Underweight',
                         18.5 <= BMI & BMI < 25 ~ 'Healthy weight',
                         25 <= BMI & BMI < 30 ~ 'Overweight',
                         BMI >= 30 ~ 'Obese'))
  
```

```{r}
pca_data <- pca_data %>% 
  pivot_longer(c("Lesion","Perilesion"),
               names_to = "Tissue",
               values_to = "expr") %>% 
  pivot_wider(id_cols = c("Gender",
                          "Race",
                          "Smoker",
                          "Age",
                          "BMI",
                          #"SYMBOL",
                          "Tissue"),
              names_from = "gene",
              values_from = "expr",
              values_fn = mean)
```

```{r}
pca_fit <- pca_data %>% 
  dplyr::select(starts_with('EN')) %>% # retain only numeric columns
  scale() %>% # scale data
  prcomp() # do PCA
```

```{r}
PCA_plot <- pca_fit |> 
  augment(pca_data) |> 
  ggplot(aes(.fittedPC1, 
             .fittedPC2, 
             color = Tissue,
             label = Race)) + 
  geom_point(size = 1.5) +
  labs(title = 'PCA of RNA-seq Data by Tissue Type',
       x = 'PC1',
       y = 'PC2',
       color = 'Tissue type') +
  # Adds sample labels
  geom_text_repel(size = 2.5,
                  min.segment.length = 0,
                  segment.linetype = 4) + 
  theme_minimal() +
  theme(plot.title = 
          element_text(hjust = 0.5,
                       vjust = 2,
                       face = 'bold'),
        panel.grid.minor = element_blank()
        ) 

#ggsave("PCA.png", PCA_plot, path = "../pictures") 

  PCA_plot
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, std.dev)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:34) +
  #scale_y_continuous(
  #  labels = scales::percent_format(),
  #  expand = expansion(mult = c(0, 0.01))
  #) +
  theme_minimal()
```
